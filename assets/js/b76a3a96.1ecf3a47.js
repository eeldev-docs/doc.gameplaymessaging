"use strict";(globalThis.webpackChunkmy_website=globalThis.webpackChunkmy_website||[]).push([[152],{97:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/triggering_2-40d84fc186e9703a8591029b4677060d.png"},2804:(e,n,s)=>{s(6540),s(2303);s(4848)},5594:(e,n,s)=>{s(6540);s(4848)},7009:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"doc/getting-started/using-gameplay-messaging","title":"Using the Plugin","description":"Learn how to use the Gameplay Messaging System plugin to send and receive events between actors and systems in Unreal Engine.","source":"@site/docs/doc/getting-started/using.md","sourceDirName":"doc/getting-started","slug":"/docfiles/gameplay-messaging/using-plugin","permalink":"/docfiles/gameplay-messaging/using-plugin","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/doc/getting-started/using.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"using-gameplay-messaging","title":"Using the Plugin","description":"Learn how to use the Gameplay Messaging System plugin to send and receive events between actors and systems in Unreal Engine.","slug":"/docfiles/gameplay-messaging/using-plugin","sidebar_position":2},"sidebar":"steamCoreSidebar","previous":{"title":"Installing the Gameplay Messaging System Plugin","permalink":"/doc/getting-started/introduction"},"next":{"title":"Opening a Door (Trigger)","permalink":"/doc/examples/open_door"}}');var t=s(4848),r=s(8453);s(2804),s(5594);const a={id:"using-gameplay-messaging",title:"Using the Plugin",description:"Learn how to use the Gameplay Messaging System plugin to send and receive events between actors and systems in Unreal Engine.",slug:"/docfiles/gameplay-messaging/using-plugin",sidebar_position:2},l="Using the Gameplay Messaging System Plugin",d={},o=[{value:"Key Features",id:"key-features",level:2},{value:"Usage Examples",id:"usage-examples",level:2},{value:"Triggering and Binding Events",id:"triggering-and-binding-events",level:2},{value:"1. Trigger a Simple Event",id:"1-trigger-a-simple-event",level:3},{value:"2. Trigger an Event with Payload",id:"2-trigger-an-event-with-payload",level:3},{value:"Binding to Events",id:"binding-to-events",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Example Project",id:"example-project",level:2}];function g(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"using-the-gameplay-messaging-system-plugin",children:"Using the Gameplay Messaging System Plugin"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"Gameplay Messaging System"})," plugin provides a lightweight, flexible, and decoupled way to send and receive events across actors, components, and systems in Unreal Engine. It is ideal for gameplay logic that requires communication between loosely coupled objects, such as triggering doors, updating UI, or broadcasting game events."]}),"\n",(0,t.jsxs)(n.p,{children:["The plugin is easy to use and fully supports ",(0,t.jsx)(n.strong,{children:"Blueprints"})," and ",(0,t.jsx)(n.strong,{children:"C++"}),"."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Event-Based Communication"}),": Trigger and listen for named events with optional payload data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Decoupled Design"}),": Actors don\u2019t need direct references to communicate."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Blueprint & C++ Support"}),": Fully accessible in both visual scripting and code."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Lightweight & Performant"}),": Minimal overhead, suitable for frequent use."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,t.jsx)(n.p,{children:"Explore these practical examples to get started:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/doc/examples/open_door",children:"Opening a Door Example"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/doc/examples/update_widget",children:"Updating a Widget (UI)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/example-project",children:"Example Project"})}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"triggering-and-binding-events",children:"Triggering and Binding Events"}),"\n",(0,t.jsx)(n.h3,{id:"1-trigger-a-simple-event",children:"1. Trigger a Simple Event"}),"\n",(0,t.jsxs)(n.p,{children:["Send a named event (e.g., ",(0,t.jsx)(n.code,{children:'"Door.Open"'}),") to all listeners."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Triggering a Simple Event",src:s(9038).A+"",width:"1385",height:"822"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Steps"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Use the ",(0,t.jsx)(n.strong,{children:"Trigger Message"})," node."]}),"\n",(0,t.jsxs)(n.li,{children:["Set the ",(0,t.jsx)(n.strong,{children:"Message Name"})," to ",(0,t.jsx)(n.code,{children:'"Door.Open"'}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Execute to broadcast the event."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"2-trigger-an-event-with-payload",children:"2. Trigger an Event with Payload"}),"\n",(0,t.jsxs)(n.p,{children:["Send an event with additional data, such as the ",(0,t.jsx)(n.strong,{children:"Character"})," that triggered it."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Triggering Event with Character Payload",src:s(97).A+"",width:"2018",height:"912"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Steps"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Use the ",(0,t.jsx)(n.strong,{children:"Trigger Message"})," node."]}),"\n",(0,t.jsxs)(n.li,{children:["Set ",(0,t.jsx)(n.strong,{children:"Message Name"})," to ",(0,t.jsx)(n.code,{children:'"Door.OpenedByPlayer"'}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Add a payload parameter (e.g., ",(0,t.jsx)(n.code,{children:"Instigator"})," of type ",(0,t.jsx)(n.code,{children:"ACharacter*"}),")."]}),"\n",(0,t.jsx)(n.li,{children:"Connect the triggering character to the payload input."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"binding-to-events",children:"Binding to Events"}),"\n",(0,t.jsxs)(n.p,{children:["To receive messages, use the ",(0,t.jsx)(n.strong,{children:"Bind to Message"})," node in any actor or widget:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-blueprint",children:'Bind to Message \u2192 Message Name: "Door.Open" \u2192 On Received \u2192 Open Door Animation\n'})}),"\n",(0,t.jsx)(n.p,{children:"You can bind in:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Actors"})," (e.g., doors, triggers)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Widgets"})," (e.g., update health UI)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Game Mode / Game Instance"})," (e.g., global events)"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.strong,{children:"descriptive message names"})," (e.g., ",(0,t.jsx)(n.code,{children:'"Player.Died"'}),", ",(0,t.jsx)(n.code,{children:'"Item.PickedUp"'}),")."]}),"\n",(0,t.jsxs)(n.li,{children:["Include ",(0,t.jsx)(n.strong,{children:"payloads"})," for context when needed (e.g., who triggered the event)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Unbind"})," listeners in ",(0,t.jsx)(n.code,{children:"EndPlay"})," to prevent memory leaks."]}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.strong,{children:"namespaces"})," in message names (e.g., ",(0,t.jsx)(n.code,{children:'"Door.Open"'}),", ",(0,t.jsx)(n.code,{children:'"Door.Close"'}),") to avoid conflicts."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"example-project",children:"Example Project"}),"\n",(0,t.jsxs)(n.p,{children:["Download the full ",(0,t.jsx)(n.a,{href:"/example-project",children:"Example Project"})," to see the messaging system in action with doors, UI updates, and more."]})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(g,{...e})}):g(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var i=s(6540);const t={},r=i.createContext(t);function a(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:n},e.children)}},9038:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/triggering-02e204d2645573a64ad49150bba6d2d5.png"}}]);