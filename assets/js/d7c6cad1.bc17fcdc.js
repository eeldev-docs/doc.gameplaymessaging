"use strict";(globalThis.webpackChunkmy_website=globalThis.webpackChunkmy_website||[]).push([[562],{1523:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/open_door_closed-9040a6056b378a3ce1bdd8eddfa04d86.png"},1728:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/open_door_open_button-f53bbb999cec2a35bb531fcb941c59b1.png"},2804:(e,t,n)=>{n(6540),n(2303);n(4848)},3210:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>g,frontMatter:()=>i,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"doc/examples/open_door_button","title":"Opening a Door (Button)","description":"In this example we\'ll take a look at how we can trigger opening and closing a door using gameplay events.","source":"@site/docs/doc/examples/open_door_button.md","sourceDirName":"doc/examples","slug":"/doc/examples/open_door_button","permalink":"/doc/examples/open_door_button","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/doc/examples/open_door_button.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"steamCoreSidebar","previous":{"title":"Opening a Door (Trigger)","permalink":"/doc/examples/open_door"},"next":{"title":"Configuring Logging","permalink":"/logging"}}');var s=n(4848),o=n(8453);n(2804),n(5594);const i={sidebar_position:2},r="Opening a Door (Button)",d={},l=[{value:"Create the tags",id:"create-the-tags",level:2},{value:"Creating the struct for our payload",id:"creating-the-struct-for-our-payload",level:2},{value:"Begin Play",id:"begin-play",level:2},{value:"The Result",id:"the-result",level:2}];function c(e){const t={h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"opening-a-door-button",children:"Opening a Door (Button)"})}),"\n",(0,s.jsx)(t.p,{children:"In this example we'll take a look at how we can trigger opening and closing a door using gameplay events."}),"\n",(0,s.jsx)(t.h2,{id:"create-the-tags",children:"Create the tags"}),"\n",(0,s.jsx)(t.p,{children:"Start by creating gameplay tags for the event"}),"\n",(0,s.jsxs)(t.p,{children:["Navigate to Project Settings > GameplayTags\r\n",(0,s.jsx)(t.img,{alt:"Image",src:n(4792).A+"",width:"2347",height:"778"})]}),"\n",(0,s.jsxs)(t.p,{children:['Add a new tag called "Gameplay.Trigger.Door", this tag can be whatever you like, but keeping it descriptive will help stay organized when you have a lot of tags.\r\n',(0,s.jsx)(t.img,{alt:"Image",src:n(4795).A+"",width:"1016",height:"783"})]}),"\n",(0,s.jsx)(t.h2,{id:"creating-the-struct-for-our-payload",children:"Creating the struct for our payload"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:'Next we\'re going to create a stuct to act as our "payload", this will be used to send a data payload when triggering the event.'}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Image",src:n(9973).A+"",width:"747",height:"1028"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:'The struct will contain a single bool value that will determine "open" and "closed" states.'}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Image",src:n(6228).A+"",width:"1252",height:"745"})}),"\n",(0,s.jsx)(t.h2,{id:"begin-play",children:"Begin Play"}),"\n",(0,s.jsx)(t.p,{children:'On begin play in our Door Actor, we will execute "listen for gameplay messages", which will start to listen for events that trigger on the tag we specify. Set both the tag we created earlier as the Channel and the Payload type to the struct we created in the previous step.'}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Image",src:n(8043).A+"",width:"1477",height:"393"})}),"\n",(0,s.jsx)(t.p,{children:'In our "button" blueprint, we\'re going to add the "broadcast message" node to indicate that we want to open the door.'}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Image",src:n(7391).A+"",width:"1125",height:"598"})}),"\n",(0,s.jsx)(t.p,{children:"The open and close events will simply move the doors statih mesh, very simple logic, but you get the idea."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Image",src:n(7724).A+"",width:"1481",height:"861"})}),"\n",(0,s.jsx)(t.h2,{id:"the-result",children:"The Result"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Image",src:n(1523).A+"",width:"1285",height:"772"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Image",src:n(1728).A+"",width:"1283",height:"771"})})]})}function g(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},4792:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/open_door_tags-9ce6db969a44f344984ac0265f0561c5.png"},4795:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/open_door_tags_2-23c1a1410ebdc456f8bb60a2863bcdc3.png"},5594:(e,t,n)=>{n(6540);n(4848)},6228:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/struct_doorstate-632367cb2115ca0f17b65a7992b345a7.png"},7391:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/open_door_button-5b1231dded697409b7b6c0cd2b3e945d.png"},7724:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/open_door_open_close_events-7030f4ce9f7141f01ddecd3846a1ed15.png"},8043:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/open_door_begin_play-15b1d211f533be1865331855e5848bec.png"},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>r});var a=n(6540);const s={},o=a.createContext(s);function i(e){const t=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(o.Provider,{value:t},e.children)}},9973:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/create_struct-c5763e8ef6678663d36562e655640770.png"}}]);