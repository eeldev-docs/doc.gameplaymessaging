"use strict";(globalThis.webpackChunkmy_website=globalThis.webpackChunkmy_website||[]).push([[857],{1523:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/open_door_closed-9040a6056b378a3ce1bdd8eddfa04d86.png"},1587:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"doc/examples/open_door","title":"Opening a Door (Trigger)","description":"This guide demonstrates how to use gameplay events in the Gameplay Messaging System to trigger opening and closing a door in your Unreal Engine project. We\'ll create gameplay tags, define a data payload structure, set up event listeners, and implement overlap-based triggers to control the door\'s behavior.","source":"@site/docs/doc/examples/open_door.md","sourceDirName":"doc/examples","slug":"/doc/examples/open_door","permalink":"/doc/examples/open_door","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/doc/examples/open_door.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"steamCoreSidebar","previous":{"title":"Using the Gameplay Messaging System Plugin","permalink":"/doc/getting-started/using"},"next":{"title":"Opening a Door (Button)","permalink":"/doc/examples/open_door_button"}}');var r=s(4848),i=s(8453);s(2804),s(5594);const o={sidebar_position:2},l="Opening a Door (Trigger)",a={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step 1: Create Gameplay Tags",id:"step-1-create-gameplay-tags",level:2},{value:"Step 2: Create a Payload Struct",id:"step-2-create-a-payload-struct",level:2},{value:"Step 3: Set Up the Door Actor",id:"step-3-set-up-the-door-actor",level:2},{value:"Step 4: Test the Setup",id:"step-4-test-the-setup",level:2},{value:"Results",id:"results",level:2},{value:"Additional Notes",id:"additional-notes",level:2},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"opening-a-door-trigger",children:"Opening a Door (Trigger)"})}),"\n",(0,r.jsx)(n.p,{children:"This guide demonstrates how to use gameplay events in the Gameplay Messaging System to trigger opening and closing a door in your Unreal Engine project. We'll create gameplay tags, define a data payload structure, set up event listeners, and implement overlap-based triggers to control the door's behavior."}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Unreal Engine Project"}),": Ensure you have a project set up with the Gameplay Messaging System plugin installed and enabled (see ",(0,r.jsx)(n.a,{href:"/doc/getting-started/introduction",children:"Installing the Plugin"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Door Actor"}),": A basic Door Actor with a static mesh component that can be moved or animated to represent open and closed states."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Basic Blueprint Knowledge"}),": Familiarity with Unreal Engine Blueprints, including creating structs, gameplay tags, and event-driven logic."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"step-1-create-gameplay-tags",children:"Step 1: Create Gameplay Tags"}),"\n",(0,r.jsx)(n.p,{children:"Gameplay tags are used to identify and trigger specific events in the Gameplay Messaging System. We'll create a tag to represent the door trigger event."}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Navigate to Gameplay Tags Settings"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Open ",(0,r.jsx)(n.strong,{children:"Project Settings"})," from the Unreal Editor's top menu."]}),"\n",(0,r.jsxs)(n.li,{children:["Go to ",(0,r.jsx)(n.strong,{children:"GameplayTags"})," under the ",(0,r.jsx)(n.strong,{children:"Game"})," category.\r\n",(0,r.jsx)(n.img,{alt:"Gameplay Tags Settings",src:s(4792).A+"",width:"2347",height:"778"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Add a New Tag"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Click ",(0,r.jsx)(n.strong,{children:"Add New Tag"})," or the ",(0,r.jsx)(n.strong,{children:"+"})," button in the Gameplay Tags section."]}),"\n",(0,r.jsxs)(n.li,{children:["Create a new tag named ",(0,r.jsx)(n.code,{children:"Gameplay.Trigger.Door"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tip"}),": Use a descriptive name to keep your tags organized, especially in projects with many tags.\r\n",(0,r.jsx)(n.img,{alt:"New Gameplay Tag",src:s(4795).A+"",width:"1016",height:"783"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Save Changes"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ensure the tag is saved in the Gameplay Tags list. This tag will be used as the channel for triggering door events."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"step-2-create-a-payload-struct",children:"Step 2: Create a Payload Struct"}),"\n",(0,r.jsx)(n.p,{children:"To send data with the gameplay event (e.g., whether the door should open or close), we'll create a struct to act as the payload."}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Create a New Struct"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["In the ",(0,r.jsx)(n.strong,{children:"Content Browser"}),", right-click and select ",(0,r.jsx)(n.strong,{children:"Blueprint"})," > ",(0,r.jsx)(n.strong,{children:"Structure"})," to create a new struct."]}),"\n",(0,r.jsxs)(n.li,{children:["Name the struct something descriptive, like ",(0,r.jsx)(n.code,{children:"DoorStatePayload"}),".\r\n",(0,r.jsx)(n.img,{alt:"Create Struct",src:s(9973).A+"",width:"747",height:"1028"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Define Struct Variables"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Open the new struct in the Blueprint editor."}),"\n",(0,r.jsxs)(n.li,{children:["Add a single ",(0,r.jsx)(n.strong,{children:"Boolean"})," variable named ",(0,r.jsx)(n.code,{children:"IsOpen"})," (or similar) to indicate the door's state (",(0,r.jsx)(n.code,{children:"true"})," for open, ",(0,r.jsx)(n.code,{children:"false"})," for closed)."]}),"\n",(0,r.jsxs)(n.li,{children:["Save and compile the struct.\r\n",(0,r.jsx)(n.img,{alt:"Struct Door State",src:s(6228).A+"",width:"1252",height:"745"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"step-3-set-up-the-door-actor",children:"Step 3: Set Up the Door Actor"}),"\n",(0,r.jsx)(n.p,{children:"The Door Actor will listen for gameplay messages and respond to overlap events to trigger the open/close behavior."}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Configure BeginPlay"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Open your Door Actor's Blueprint."}),"\n",(0,r.jsxs)(n.li,{children:["In the ",(0,r.jsx)(n.strong,{children:"Event BeginPlay"})," node, add a ",(0,r.jsx)(n.strong,{children:"Listen for Gameplay Messages"})," node."]}),"\n",(0,r.jsxs)(n.li,{children:["Set the following parameters:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Channel"}),": Set to the ",(0,r.jsx)(n.code,{children:"Gameplay.Trigger.Door"})," tag created earlier."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Payload Type"}),": Select the ",(0,r.jsx)(n.code,{children:"DoorStatePayload"})," struct."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["This node will make the Door Actor listen for events triggered on the specified tag and process the associated payload.\r\n",(0,r.jsx)(n.img,{alt:"BeginPlay Setup",src:s(8043).A+"",width:"1477",height:"393"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Implement Overlap Events"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.strong,{children:"OnComponentBeginOverlap"})," and ",(0,r.jsx)(n.strong,{children:"OnComponentEndOverlap"})," events on the Door Actor\u2019s collision component (e.g., a Box or Sphere component) to detect when an actor (like the player) enters or exits the trigger area."]}),"\n",(0,r.jsxs)(n.li,{children:["In ",(0,r.jsx)(n.strong,{children:"OnComponentBeginOverlap"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Create a ",(0,r.jsx)(n.strong,{children:"Send Gameplay Message"})," node."]}),"\n",(0,r.jsxs)(n.li,{children:["Set the ",(0,r.jsx)(n.strong,{children:"Channel"})," to ",(0,r.jsx)(n.code,{children:"Gameplay.Trigger.Door"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Create a new instance of the ",(0,r.jsx)(n.code,{children:"DoorStatePayload"})," struct and set ",(0,r.jsx)(n.code,{children:"IsOpen"})," to ",(0,r.jsx)(n.code,{children:"true"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["In ",(0,r.jsx)(n.strong,{children:"OnComponentEndOverlap"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Create another ",(0,r.jsx)(n.strong,{children:"Send Gameplay Message"})," node."]}),"\n",(0,r.jsxs)(n.li,{children:["Set the ",(0,r.jsx)(n.strong,{children:"Channel"})," to ",(0,r.jsx)(n.code,{children:"Gameplay.Trigger.Door"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Create a new instance of the ",(0,r.jsx)(n.code,{children:"DoorStatePayload"})," struct and set ",(0,r.jsx)(n.code,{children:"IsOpen"})," to ",(0,r.jsx)(n.code,{children:"false"}),".\r\n",(0,r.jsx)(n.img,{alt:"Overlap Events",src:s(3162).A+"",width:"1601",height:"492"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Handle Open/Close Logic"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["When the ",(0,r.jsx)(n.strong,{children:"Listen for Gameplay Messages"})," node receives a message, it outputs the payload (",(0,r.jsx)(n.code,{children:"DoorStatePayload"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:["Use the ",(0,r.jsx)(n.code,{children:"IsOpen"})," boolean from the payload to determine the door\u2019s behavior:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"IsOpen"})," is ",(0,r.jsx)(n.code,{children:"true"}),", move or animate the door\u2019s static mesh to the ",(0,r.jsx)(n.strong,{children:"open"})," position."]}),"\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"IsOpen"})," is ",(0,r.jsx)(n.code,{children:"false"}),", move or animate the door\u2019s static mesh to the ",(0,r.jsx)(n.strong,{children:"closed"})," position."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Example: Use a ",(0,r.jsx)(n.strong,{children:"Set Relative Location"})," or ",(0,r.jsx)(n.strong,{children:"Add Relative Rotation"})," node to adjust the door\u2019s static mesh component.\r\n",(0,r.jsx)(n.img,{alt:"Open/Close Events",src:s(7724).A+"",width:"1481",height:"861"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"step-4-test-the-setup",children:"Step 4: Test the Setup"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Place the Door Actor"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Add the Door Actor to your level and ensure its collision component is set up to detect overlaps (e.g., with the player pawn)."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Playtest"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Run the game in the Unreal Editor."}),"\n",(0,r.jsxs)(n.li,{children:["Walk into the door\u2019s trigger area to trigger the ",(0,r.jsx)(n.code,{children:"OnComponentBeginOverlap"})," event and open the door."]}),"\n",(0,r.jsxs)(n.li,{children:["Walk out of the trigger area to trigger the ",(0,r.jsx)(n.code,{children:"OnComponentEndOverlap"})," event and close the door."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"results",children:"Results"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Closed State"}),": The door remains closed when no actors are overlapping the trigger area.",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.img,{alt:"Door Closed",src:s(1523).A+"",width:"1285",height:"772"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Open State"}),": The door opens when an actor overlaps the trigger area.",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.img,{alt:"Door Open",src:s(3363).A+"",width:"1285",height:"765"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"additional-notes",children:"Additional Notes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Customization"}),": You can expand the ",(0,r.jsx)(n.code,{children:"DoorStatePayload"})," struct to include additional data, such as animation speed, sound effects, or door-specific identifiers."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optimization"}),": Ensure the collision component\u2019s settings (e.g., Collision Presets) are configured to detect overlaps only with relevant actors (e.g., players or specific pawn types)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Debugging"}),": If the door doesn\u2019t respond as expected:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Verify the ",(0,r.jsx)(n.code,{children:"Gameplay.Trigger.Door"})," tag is correctly set in both the ",(0,r.jsx)(n.strong,{children:"Send Gameplay Message"})," and ",(0,r.jsx)(n.strong,{children:"Listen for Gameplay Messages"})," nodes."]}),"\n",(0,r.jsx)(n.li,{children:"Check that the payload struct is properly configured and passed."}),"\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.strong,{children:"Print String"})," nodes to debug the overlap events and payload values."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Explore additional gameplay messaging features, such as broadcasting messages to multiple actors or integrating with other systems (e.g., UI or audio)."}),"\n",(0,r.jsx)(n.li,{children:"Refer to the Gameplay Messaging System documentation for advanced use cases, such as networked events or complex payload structures."}),"\n",(0,r.jsx)(n.li,{children:"Experiment with different door behaviors, such as timed auto-closing or locked states, by extending the payload and logic."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"For further assistance, consult the plugin\u2019s official documentation on the Unreal Engine Marketplace or reach out to the plugin developer through support channels."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},2804:(e,n,s)=>{s(6540),s(2303);s(4848)},3162:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/open_door_overlap-82e53a3953e36fd652728e6d87950478.png"},3363:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/open_door_open-6285d4139f844a0bd3d6697edd538481.png"},4792:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/open_door_tags-9ce6db969a44f344984ac0265f0561c5.png"},4795:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/open_door_tags_2-23c1a1410ebdc456f8bb60a2863bcdc3.png"},5594:(e,n,s)=>{s(6540);s(4848)},6228:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/struct_doorstate-632367cb2115ca0f17b65a7992b345a7.png"},7724:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/open_door_open_close_events-7030f4ce9f7141f01ddecd3846a1ed15.png"},8043:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/open_door_begin_play-15b1d211f533be1865331855e5848bec.png"},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var t=s(6540);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}},9973:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/create_struct-c5763e8ef6678663d36562e655640770.png"}}]);